/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { CoinFlip } from "../CoinFlip";

export class CoinFlip__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<CoinFlip> {
    return super.deploy(overrides || {}) as Promise<CoinFlip>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CoinFlip {
    return super.attach(address) as CoinFlip;
  }
  connect(signer: Signer): CoinFlip__factory {
    return super.connect(signer) as CoinFlip__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CoinFlip {
    return new Contract(address, _abi, signerOrProvider) as CoinFlip;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bet",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "choice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "seed",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "over",
        type: "bool",
      },
    ],
    name: "GameCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "round",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "multiplier",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bet",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prize",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "choice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "seed",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "over",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "enum GamesCore.GameState",
        name: "state",
        type: "uint8",
      },
    ],
    name: "GamePlayed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_seed",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "confirm",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "croupier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "edge",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "games",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bet",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "choice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "over",
        type: "bool",
      },
      {
        internalType: "enum GamesCore.GameState",
        name: "state",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "houseProfit",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listGames",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxBet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minBet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_choice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_betAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_seed",
        type: "bytes32",
      },
    ],
    name: "play",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "profitTaker",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_min",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_max",
        type: "uint256",
      },
    ],
    name: "setBetRange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setCroupier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_e",
        type: "uint8",
      },
    ],
    name: "setEdge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_profitTaker",
        type: "address",
      },
    ],
    name: "setProfitTaker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalGamesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawProfit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600780546001600160a01b031916739a946c3cb16c08334b69ae249690c236ebd5583e17905534801561003657600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060058054336001600160a01b031991821681179092556006805490911690911790556007805460ff60a01b1916600560a01b17905567016345785d8a0000600255678ac7230489e800006003556117db806100d46000396000f3fe6080604052600436106101395760003560e01c80638da5cb5b116100ab578063b00606a51161006f578063b00606a51461033f578063f2fde38b1461035f578063f579f8821461037f578063f593a38714610401578063f8bb201c14610417578063fc0c546a1461043757610140565b80638da5cb5b146102a3578063959499b6146102c15780639619367d146102d6578063abae5050146102ec578063adc2c98a1461030c57610140565b80636b5c5f39116100fd5780636b5c5f3914610203578063715018a614610223578063722153731461023857806372be411214610258578063853828b61461027857806388fedd041461028d57610140565b8063144fa6d7146101425780632e5b2168146101625780635c6c09391461018b57806365fe09d7146101c357806367759501146101e357610140565b3661014057005b005b34801561014e57600080fd5b5061014061015d3660046113bb565b610457565b34801561016e57600080fd5b5061017860035481565b6040519081526020015b60405180910390f35b34801561019757600080fd5b506006546101ab906001600160a01b031681565b6040516001600160a01b039091168152602001610182565b3480156101cf57600080fd5b506101786101de366004611402565b6104bf565b3480156101ef57600080fd5b506101406101fe36600461148d565b6104e0565b34801561020f57600080fd5b506005546101ab906001600160a01b031681565b34801561022f57600080fd5b50610140610898565b34801561024457600080fd5b506101406102533660046113bb565b61090c565b34801561026457600080fd5b506101406102733660046114b8565b610958565b34801561028457600080fd5b506101406109a2565b34801561029957600080fd5b5061017860045481565b3480156102af57600080fd5b506000546001600160a01b03166101ab565b3480156102cd57600080fd5b50610140610b23565b3480156102e257600080fd5b5061017860025481565b3480156102f857600080fd5b5061014061030736600461146c565b610bc5565b34801561031857600080fd5b5060075461032d90600160a01b900460ff1681565b60405160ff9091168152602001610182565b34801561034b57600080fd5b5061014061035a36600461141a565b610bfa565b34801561036b57600080fd5b5061014061037a3660046113bb565b610f71565b34801561038b57600080fd5b506103ed61039a366004611402565b600860205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494956001600160a01b03909416949293919290919060ff8082169161010090041688565b60405161018298979695949392919061159a565b34801561040d57600080fd5b5061017860015481565b34801561042357600080fd5b506101406104323660046113bb565b61105b565b34801561044357600080fd5b506007546101ab906001600160a01b031681565b6000546001600160a01b0316331461048a5760405162461bcd60e51b815260040161048190611565565b60405180910390fd5b6001600160a01b03811661049d57600080fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b600981815481106104cf57600080fd5b600091825260209091200154905081565b8180600254111580156104f557506003548111155b6105415760405162461bcd60e51b815260206004820152601760248201527f496e636f727265637420616d6f756e7420746f206265740000000000000000006044820152606401610481565b6000828152600860205260409020548290156105935760405162461bcd60e51b815260206004820152601160248201527014d9595908185b1c9958591e481d5cd959607a1b6044820152606401610481565b8415806105a05750846001145b6105f65760405162461bcd60e51b815260206004820152602160248201527f436f696e466c69703a2043686f6963652073686f756c642062652030206f72206044820152603160f81b6064820152608401610481565b8361064d5760405162461bcd60e51b815260206004820152602160248201527f436f696e466c69703a2042657420616d6f756e7420636f756c646e74206265206044820152600360fc1b6064820152608401610481565b60075460009060649061066b90600160a01b900460ff1660c86116fb565b6106789060ff1687611686565b6106829190611672565b6007546040516370a0823160e01b81523060048201529192506001600160a01b0316906370a082319060240160206040518083038186803b1580156106c657600080fd5b505afa1580156106da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fe9190611454565b81106107725760405162461bcd60e51b815260206004820152603860248201527f436f696e466c69703a20496e737566666963656e742066756e6473206f6e206360448201527f6f6e747261637420746f20636f766572207468652062657400000000000000006064820152608401610481565b60075461078a906001600160a01b03163330886110a7565b60008481526008602052604081206001805491926107a78361174a565b9091555050600180548255810180546001600160a01b031916331790556002810186905560068101805461ff0019169055600480820188905580548791906000906107f3908490611631565b909155505060098054600180820183556000929092527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af018690558181015460028301546004840154604080519283526020830191909152810188905260608101929092526001600160a01b0316907f5c0023731903eb93130ada523196982a48d902eea3b24cc0b647c08d99007b609060800160405180910390a250505050505050565b6000546001600160a01b031633146108c25760405162461bcd60e51b815260040161048190611565565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146109365760405162461bcd60e51b815260040161048190611565565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146109825760405162461bcd60e51b815260040161048190611565565b6007805460ff909216600160a01b0260ff60a01b19909216919091179055565b6000546001600160a01b031633146109cc5760405162461bcd60e51b815260040161048190611565565b60006004541315610a9157610a8c6109ec6000546001600160a01b031690565b600480546007546040516370a0823160e01b8152309381019390935290916001600160a01b03909116906370a082319060240160206040518083038186803b158015610a3757600080fd5b505afa158015610a4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6f9190611454565b610a7991906116e4565b6007546001600160a01b03169190611118565b610b21565b610b21610aa66000546001600160a01b031690565b6007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b158015610ae957600080fd5b505afa158015610afd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a799190611454565b565b6006546001600160a01b03163314610b925760405162461bcd60e51b815260206004820152602c60248201527f4f6e6c79207468652070726f6669742074616b65722063616e2072756e20746860448201526b34b990333ab731ba34b7b71760a11b6064820152608401610481565b60006004541315610b2157600654600454600754610bbe926001600160a01b0391821692911690611118565b6000600455565b6000546001600160a01b03163314610bef5760405162461bcd60e51b815260040161048190611565565b600291909155600355565b6005546001600160a01b03163314610c655760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79207468652063726f75706965722063616e2072756e207468697320666044820152673ab731ba34b7b71760c11b6064820152608401610481565b6000848152600860205260408120906006820154610100900460ff166002811115610ca057634e487b7160e01b600052602160045260246000fd5b14610ced5760405162461bcd60e51b815260206004820152601d60248201527f436f696e466c69703a2047616d6520616c726561647920706c617965640000006044820152606401610481565b60006040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250905060008187604051602001610d3c929190611510565b60408051808303601f1901815282825280516020918201206005546000855291840180845281905260ff8a169284019290925260608301889052608083018790529092506001600160a01b03169060019060a0016020604051602081039080840390855afa158015610db2573d6000803e3d6000fd5b505050602060405103516001600160a01b031614610e125760405162461bcd60e51b815260206004820152601b60248201527f436f696e466c69703a20496e76616c6964207369676e617475726500000000006044820152606401610481565b610e1d600285611765565b6005840181905560048401541415610ebf57600754606490610e4a90600160a01b900460ff1660c86116fb565b60ff168460020154610e5c9190611686565b610e669190611672565b6003840181905560068401805461ff00191661010017905560048054600090610e909084906116a5565b909155505060018301546003840154600754610eba926001600160a01b0391821692911690611118565b610ed8565b6000600384015560068301805461ff0019166102001790555b6001830154835460075489926001600160a01b0316917e867f710c53fead2d43f716b65ca12f0ecbef01e58edb8cd235073f9149243191610f2490600160a01b900460ff1660c86116fb565b8760020154886003015489600401548a6005015460018c60060160019054906101000a900460ff16604051610f609897969594939291906115ef565b60405180910390a350505050505050565b6000546001600160a01b03163314610f9b5760405162461bcd60e51b815260040161048190611565565b6001600160a01b0381166110005760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610481565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146110855760405162461bcd60e51b815260040161048190611565565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6040516001600160a01b03808516602483015283166044820152606481018290526111129085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261114d565b50505050565b6040516001600160a01b03831660248201526044810182905261114890849063a9059cbb60e01b906064016110db565b505050565b60006111a2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661121f9092919063ffffffff16565b80519091501561114857808060200190518101906111c091906113e2565b6111485760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610481565b606061122e8484600085611238565b90505b9392505050565b6060824710156112995760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610481565b6112a285611367565b6112ee5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610481565b600080866001600160a01b0316858760405161130a91906114f4565b60006040518083038185875af1925050503d8060008114611347576040519150601f19603f3d011682016040523d82523d6000602084013e61134c565b606091505b509150915061135c828286611371565b979650505050505050565b803b15155b919050565b60608315611380575081611231565b8251156113905782518084602001fd5b8160405162461bcd60e51b81526004016104819190611532565b803560ff8116811461136c57600080fd5b6000602082840312156113cc578081fd5b81356001600160a01b0381168114611231578182fd5b6000602082840312156113f3578081fd5b81518015158114611231578182fd5b600060208284031215611413578081fd5b5035919050565b6000806000806080858703121561142f578283fd5b8435935061143f602086016113aa565b93969395505050506040820135916060013590565b600060208284031215611465578081fd5b5051919050565b6000806040838503121561147e578182fd5b50508035926020909101359150565b6000806000606084860312156114a1578283fd5b505081359360208301359350604090920135919050565b6000602082840312156114c9578081fd5b611231826113aa565b600381106114f057634e487b7160e01b600052602160045260246000fd5b9052565b6000825161150681846020870161171e565b9190910192915050565b6000835161152281846020880161171e565b9190910191825250602001919050565b600060208252825180602084015261155181604085016020870161171e565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b8881526001600160a01b038816602082015260408101879052606081018690526080810185905260a0810184905282151560c082015261010081016115e260e08301846114d2565b9998505050505050505050565b60006101008201905089825260ff891660208301528760408301528660608301528560808301528460a083015283151560c08301526115e260e08301846114d2565b600080821280156001600160ff1b038490038513161561165357611653611779565b600160ff1b839003841281161561166c5761166c611779565b50500190565b6000826116815761168161178f565b500490565b60008160001904831182151516156116a0576116a0611779565b500290565b60008083128015600160ff1b8501841216156116c3576116c3611779565b6001600160ff1b03840183138116156116de576116de611779565b50500390565b6000828210156116f6576116f6611779565b500390565b600060ff821660ff84168082101561171557611715611779565b90039392505050565b60005b83811015611739578181015183820152602001611721565b838111156111125750506000910152565b600060001982141561175e5761175e611779565b5060010190565b6000826117745761177461178f565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea26469706673582212207dbe2e313c1abe1d46ef4a474d9afa339c54123d66779c21038988ca0aba50c264736f6c63430008030033";
