type IProps = {
  padding?: string;
  isRealMode?: boolean;
  number: number;
  type: string;
  amount: number;
  address?: string;
  isRolling: boolean;
  onRoll: Function;
  betStep: number;
  minBet: number;
  maxBet: number;
  maxPayout: number;
  onNumberChange: Function;
  onTypeChange: Function;
  onAmountChange: Function;
  accessAvailable: boolean;
  minNumber: number;
  maxNumber: number;
  maintenance: boolean;
  decimals: any;
  loading: boolean;
  currencyValue?: string;
  balance: number;
  games?: string;
};
type IState = {
  focusedInputId: null;
  buttonDisabled: boolean;
  active: boolean;
  alert: { isOpen: boolean; message: string };
  allowance: null;
  isLoad: boolean;
  approve: boolean;
  amount: number;
};
type IGenerateGroup = {
  padding?: string;
  payoutStyle?: boolean;
  label?: string;
  value: number;
  handler: Function;
  actionGenerator?: () => null;
  step?: number;
  min?: number;
  max?: number;
  disabled: boolean;
  format?: (v: number) => number;
  readonly?: boolean;
  hint?: null;
  nextInput?: any;
  handleRef?: (ref: any) => void;
  currencyName?: string;
  mobilePadding?: string;
  borderRadios?: string;
  games?: string;
  fontSize?: string;
  inputType?: string;
};
type IshuldUpdate = {
  amount: number;
  number: number;
  type: string;
};
type IMapStateType = {
  maintenance: boolean | undefined;
  decimals: number | undefined;
};
export type { IProps, IState, IGenerateGroup, IshuldUpdate, IMapStateType };
